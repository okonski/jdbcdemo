package com.example.jdbcdemo.service;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

import com.example.jdbcdemo.domain.Company;
import com.example.jdbcdemo.domain.Person;

public class CompanyManager {

	private Connection connection;
	private Statement statement;
	
	private String url = "jdbc:hsqldb:hsql://localhost/workdb";
	private String createTableCompany = "CREATE TABLE Company(id bigint GENERATED BY DEFAULT AS IDENTITY, name varchar(100))";
	
	private PreparedStatement addCompanyStmt;
	private PreparedStatement updateCompanyStmt;
	private PreparedStatement deleteAllCompaniesStmt;
	private PreparedStatement getAllCompaniesStmt;
	private PreparedStatement getCompanyWorkersStmt;
	private PreparedStatement getCompanyByNameStmt;
	public CompanyManager(){
		try{
			
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement();
			
			ResultSet rs = connection.getMetaData().getTables(null, null, null,
					null);
			boolean tableExists = false;
			while (rs.next()) {
				if ("Company".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					tableExists = true;
					break;
				}
			}

			if (!tableExists)
				statement.executeUpdate(createTableCompany);	
			
			addCompanyStmt = connection
					.prepareStatement("INSERT INTO Company (name) VALUES (?)");
			deleteAllCompaniesStmt = connection
					.prepareStatement("DELETE FROM Company");
			getAllCompaniesStmt = connection
					.prepareStatement("SELECT id, name FROM Company");
			getCompanyWorkersStmt = connection
					.prepareStatement("SELECT id, name, yob FROM Person WHERE company_id = ?");
			updateCompanyStmt = connection
					.prepareStatement("UPDATE Company SET name = ? WHERE id = ?");
			getCompanyByNameStmt = connection
					.prepareStatement("SELECT id, name FROM Company WHERE name LIKE ?");
			
		} catch (SQLException e){
			e.printStackTrace();
		}
	}
	
	// Package scope
	Connection getConnection(){
		return connection;
	}
	public List<Person> getCompanyWorkers(long company_id) {
		List<Person> persons = new ArrayList<Person>();

		try {
			getCompanyWorkersStmt.setLong(1, company_id);
			ResultSet rs = getCompanyWorkersStmt.executeQuery();

			while (rs.next()) {
				Person p = new Person();
				p.setId(rs.getInt("id"));
				p.setName(rs.getString("name"));
				p.setYob(rs.getInt("yob"));
				persons.add(p);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return persons;
	}
	public void addWorkers(long company_id, List<Person> workers) throws SQLException {
		PersonManager personManager = new PersonManager();
		try{
			connection.setAutoCommit(false);
			for (Person worker : workers) {
				worker.setCompanyId(company_id);
				personManager.addPerson(worker);
				connection.commit();
			}
		} catch (SQLException e ) {
			if (connection != null) {
				connection.rollback();
			}
		}
	}
	public int updateCompany(Company c){
		int count = 0;
		try {
			updateCompanyStmt.setString(1, c.getName());
			updateCompanyStmt.setLong(2, c.getId());
			
			count = updateCompanyStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count;		
	}
	public int addCompany(Company company){
		int count = 0;
		try {
			addCompanyStmt.setString(1, company.getName());

			count = addCompanyStmt.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count;		
	}
	
	void clearCompanies() {
		try {
			deleteAllCompaniesStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	public Company getCompanyByName(String name) {
		try {
			getCompanyByNameStmt.setString(1, name);

			ResultSet rs = getCompanyByNameStmt.executeQuery();

			Company comp = new Company();

			while (rs.next()) {
				comp.setId(rs.getLong("id"));
				comp.setName(rs.getString("name"));
			}

			return comp;
		} catch (SQLException e) {
			e.printStackTrace();
		}

		return null;
	}
	public List<Company> getAllCompanies() {
		List<Company> companies = new ArrayList<Company>();

		try {
			ResultSet rs = getAllCompaniesStmt.executeQuery();

			while (rs.next()) {
				Company c = new Company();
				c.setId(rs.getLong("id"));
				c.setName(rs.getString("name"));
				companies.add(c);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return companies;
	}
}
